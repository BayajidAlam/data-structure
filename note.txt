* O(n) = linearly increase or decrease 
* O(logN) = increase or decrease by multiplication(*) or devition(/)
* O(sqrt(N)) = increase or decrease till less then or equal sqrt(N) steps 
* O(N*N) = will have a nested loop like N*N or N*M
* O(NlogN) = will have a nested loop with logN complexity


O(1) = Best 
O(logN) = 10^18
O(sqrt(N)) = 10^14
O(N) = 10^7
O(NlogN) = 10^5(1s) / 10^6(2s)
O(N*N) or O(N*M) = 10^3
O(2^N) = Wrost ever 